@page "/updategenre/{MovieId:int}/{GenreId:int}"

@inject GenreForm GenreForm
@inject IDbContextFactory<MovieContext> DbFactory
@inject NavigationManager NavManager

@using FlickDB.Services;

<div class="col-lg-12 p-1 p-lg-1 pt-lg-1">
    <h2 class="fw-bold lh-1 text-body-emphasis">Update genre</h2>
    <p class="lead">Please modify the category information below.</p>
</div>
    <form>
        <EditForm Model="@GenreForm" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
            <DataAnnotationsValidator />

            <div class="col-lg-12 p-1 p-lg-1 pt-lg-1">
                <label for="genre" class="form-label">Genre</label>
                <InputSelect id="genre" class="form-control" aria-label="genre" @bind-Value=GenreForm.Genre1 placeholder="Genre" >
                    <option value="@Genre?.Genre1">@Genre?.Genre1</option>
                    <option value="Action">Action</option>
                    <option value="Adventure">Adventure</option>
                    <option value="Animation">Animation</option>
                    <option value="Comedy">Comedy</option>
                    <option value="Documentary">Documentary</option>
                    <option value="Drama">Drama</option>
                    <option value="Family">Family</option>
                    <option value="Fantasy">Fantasy</option>
                    <option value="History">History</option>
                    <option value="Horror">Horror</option>
                    <option value="Musical">Musical</option>
                    <option value="Mystery">Mystery</option>
                    <option value="Romance">Romance</option>
                    <option value="Sci-Fi">Sci-Fi</option>
                    <option value="Sport">Sport</option>
                    <option value="Thriller">Thriller</option>
                    <option value="War">War</option>
                    <option value="Western">Western</option>
                </InputSelect>
            </div>

            <div class="col-lg-12 p-1 p-lg-1 pt-lg-1">
                <input type="submit" class="btn btn-dark btn-sm" value="Submit" />
                <input type="button" class="btn btn-dark btn-sm" @onclick="HandleCanceledSubmit" value="Cancel" />
            </div>
        </EditForm>
    </form>

@code {

    [Parameter]
    public int MovieId { get; set; }

    [Parameter]
    public int GenreId { get; set; }

    public Genre? Genre { get; set; }

    private bool IsValidSubmit { get; set; }

    public string MovieIsSubmitted => IsValidSubmit ? "Genre updated!" : "Genre update failed!";

    protected override async Task OnInitializedAsync()
    {
        DbGenreTable genretable = new DbGenreTable(DbFactory);
        Genre = await genretable.ReadSingleRecord(MovieId, GenreId);

        if (Genre != null)
        {
            GenreForm.Genre1 = Genre.Genre1;
        }
        else
        {
            throw new FindArgumentNullException();
        }
    }

    private void HandleCanceledSubmit()
    {
        NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
    }

    private async Task HandleValidSubmit()
    {
        IsValidSubmit = true;

        DbGenreTable genretable = new DbGenreTable(DbFactory);
        bool isSuccess = await genretable.UpdateRecord(GenreForm, GenreId);
        if (isSuccess)
        {
            NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
        }
    }

    private void HandleInvalidSubmit()
    {
        IsValidSubmit = false;
    }
}