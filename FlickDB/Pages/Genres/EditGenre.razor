@page "/editgenre"

@inject IDbContextFactory<MovieContext> DbFactory

@if (Genres != null && Genres.Count > 0)
{
  @foreach (var genre in Genres) 
  {
    <div class="d-flex w-100 justify-content-between">
      <ul class="list-group list-group-flush w-100 border border-secondary-subtle rounded-3">
        <li class="list-group-item border-0 fw-bold">@genre.Genre1</li>
          @if (@Mode == "Edit")
          {
            <li class="list-group-item border-0"><ManageGenre MovieId="@MovieId" GenreId="@genre.Genreid" /></li>
          }
      </ul>
    </div>
  }
}
else
{
  <div class="d-flex gap-2 w-100 justify-content-between">
    <p class="mb-0 opacity-75">Genre not found</p>
  </div>
}

@code
{
    [Parameter]
    public int MovieId { get; set; }

    [Parameter]
    public string? Mode { get; set; }

    public Movie? MovieGenre { get; set; }

    public List<Genre> Genres { get; set; } = new List<Genre>();

    protected override async Task OnInitializedAsync()
    {
        DbGenreTable genretable = new DbGenreTable(DbFactory);
        Genres = (await genretable.ReadAllRecord(MovieId)).ToList();

        if (Genres == null)
        {
            throw new FindArgumentNullException();
        }
    }
}