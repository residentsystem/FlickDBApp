@page "/manageactor/{MovieId:int}/{ActorId:int}"

@inject IDbContextFactory<MovieContext> DbFactory
@inject NavigationManager NavManager

  <div class="container my-5">
    <div class="row p-2 pb-2 pe-lg-2 pt-lg-2 align-items-center rounded-3 border shadow-sm">
      <div class="col-lg-7 p-2 p-lg-2 pt-lg-2">
        <button type="button" class="btn btn-primary btn-md px-4 me-md-2 fw-bold" @onclick="ToggleDeleteVisibility" disabled="@isDeleteButtonDisabled">Delete</button>
        <button type="button" class="btn btn-primary btn-md px-4 me-md-2 fw-bold" @onclick="ToggleUpdateVisibility" disabled="@isUpdateButtonDisabled">Update</button>
      </div>
      @if (isDeleteAlertVisible)
      {
        <div class="col-lg-7 p-2 p-lg-2 pt-lg-2">
          <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Are you sure?</h4>
            <p>Do you really want to delete this actor? This process cannot be undone.</p>
            <hr>
            <p class="mb-0">Please note that deleting an actor will also delete all infromation associated with it.</p>
          </div>
        </div>
        <div class="col-lg-7 p-2 p-lg-2 pt-lg-2">
          <button type="button" class="btn btn-primary btn-md px-4 me-md-2 fw-bold" @onclick="DeleteActor">Yes</button>
          <button type="button" class="btn btn-primary btn-md px-4 me-md-2 fw-bold" @onclick="ToggleDeleteVisibility">No</button>
        </div>
      }

      @if (isUpdateAlertVisible)
      {
        <div class="col-lg-12 p-2 p-lg-2 pt-lg-2">
          <UpdateActor MovieId="@MovieId" ActorId="@ActorId" />
        </div>
      }
    </div>
  </div>

@code {

    [Parameter]
    public int MovieId { get; set; }
  
    [Parameter]
    public int ActorId { get; set; }

    bool isDeleteAlertVisible = false;

    bool isUpdateAlertVisible = false;

    bool isDeleteButtonDisabled = false;

    bool isUpdateButtonDisabled = false;

    private async Task DeleteActor()
    {
      IActorManager actorManager = new ActorService(DbFactory);
      bool isSuccess = await actorManager.RemoveActor(ActorId);
      if (isSuccess)
      {
          NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
      }
    }

    void ToggleDeleteVisibility()
    {
        isDeleteAlertVisible = !isDeleteAlertVisible;
        isDeleteButtonDisabled = !isDeleteButtonDisabled;
        isUpdateButtonDisabled = !isUpdateButtonDisabled;
    }

    void ToggleUpdateVisibility()
    {
        isUpdateAlertVisible = !isUpdateAlertVisible;
        isDeleteButtonDisabled = !isDeleteButtonDisabled;
        isUpdateButtonDisabled = !isUpdateButtonDisabled;
    }
}