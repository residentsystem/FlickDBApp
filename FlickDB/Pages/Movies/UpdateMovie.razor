@page "/updatemovie"

@inject MovieForm MovieForm
@inject IDbContextFactory<MovieContext> DbFactory
@inject NavigationManager NavManager

@using FlickDB.Services;

<div class="container my-5">
    <div class="row p-4 pb-0 pe-lg-0 pt-lg-5 align-items-center rounded-3 border shadow-sm">
        <div class="col-lg-7 p-3 p-lg-5 pt-lg-3">
            <h2 class="fw-bold lh-1 text-body-emphasis">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-film" viewBox="0 0 16 16">
                <path d="M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm4 0v6h8V1H4zm8 8H4v6h8V9zM1 1v2h2V1H1zm2 3H1v2h2V4zM1 7v2h2V7H1zm2 3H1v2h2v-2zm-2 3v2h2v-2H1zM15 1h-2v2h2V1zm-2 3v2h2V4h-2zm2 3h-2v2h2V7zm-2 3v2h2v-2h-2zm2 3h-2v2h2v-2z"/>
            </svg>
            Update a Movie</h2>
            <p class="lead">Please modify the movie information below.</p>
            <hr />
            <div class="container">
                <div class="row">
                    <form>
                        <EditForm Model="@MovieForm" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                            <DataAnnotationsValidator />
                        
                        <div class="col-lg-12 p-2 p-lg-2 pt-lg-2">

                            <div class="mb-3">
                                <label for="title" class="form-label">Title</label>
                                <InputText id="title" type="text" class="form-control" @bind-Value=MovieForm.Title />
                                <ValidationMessage class="form-validation-error" For="() => MovieForm.Title" />
                            </div>

                            <div class="mb-3">
                                <label for="format" class="form-label">Format</label>
                                <InputSelect id="format" class="form-select" aria-label="format" @bind-Value=MovieForm.Format>
                                    <option value="@Movie?.Format">@Movie?.Format</option>
                                    <option value="HD DVD">HD DVD</option>
                                    <option value="Full-HD Blu-ray">Full-HD Blu-ray</option>
                                    <option value="Ultra-HD Blu-ray">Ultra-HD Blu-ray</option>
                                </InputSelect>
                            </div>

                            <div class="mb-3">
                                <label for="hours" class="form-label">Duration (Hours)</label>
                                <InputNumber id="hours" class="form-control" @bind-Value=MovieForm.DurationHours maxlength="2" readonly />
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-dark m-1 duration" @onclick="DecrementHour">-</button>
                                    <button type="button" class="btn btn-dark m-1 duration" @onclick="IncrementHour">+</button>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="minutes" class="form-label">Duration (Minutes)</label>
                                <InputNumber id="minutes" class="form-control" @bind-Value=MovieForm.DurationMinutes maxlength="2" readonly />
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-dark m-1 duration" @onclick="DecrementMinute">-</button>
                                    <button type="button" class="btn btn-dark m-1 duration" @onclick="IncrementMinute">+</button>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="release" class="form-label">Released</label>
                                <InputDate id="release" class="form-control" @bind-Value=MovieForm.Release />
                                <ValidationMessage class="form-validation-error" For="() => MovieForm.Release" />
                            </div>

                            <div class="mb-3">
                                <label for="rating" class="form-label">Rating</label>
                                <InputSelect id="rating" class="form-control" aria-label="rating" @bind-Value=MovieForm.SelectedRating>
                                    <option value="@Movie?.Rating">@Movie?.Rating</option>
                                    <option value="General">General</option>
                                    <option value="13 years and over">13 years and over</option>
                                    <option value="16 years and over">16 years and over</option>
                                    <option value="18 years and over">18 years and over</option>
                                </InputSelect>
                            </div>

                            <div class="mb-3">
                                <label for="poster" class="form-label">Poster</label>
                                <InputText id="poster" type="text" class="form-control" @bind-Value=MovieForm.Poster />
                            </div>

                            <div class="mb-3">
                                <label for="story" class="form-label">Story</label>
                                <InputTextArea id="story" class="form-control" @bind-Value=MovieForm.Story />
                                <ValidationMessage class="form-validation-error" For="() => MovieForm.Story" />
                            </div>

                        </div>
                        <div class="col-lg-12 p-2 p-lg-2 pt-lg-2">
                            <div class="alert alert-danger" role="alert">
                                <h4 class="alert-heading">Are you sure?</h4>
                                <p>Save your changes? This process cannot be undone.</p>
                            </div>
                        </div>
                        <div class="col-lg-12 p-2 p-lg-2 pt-lg-2">
                            <input type="submit" class="btn btn-dark px-4 me-md-2" value="Yes" />
                            <input type="button" class="btn btn-dark px-4 me-md-2" @onclick="HandleCanceledSubmit" value="No" />
                        </div>
                        </EditForm>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int MovieId { get; set; }

    public Movie? Movie { get; set; }

    private bool IsValidSubmit { get; set; }

    public string MovieIsSubmitted => IsValidSubmit ? "Movie updated!" : "Movie update failed!";

    protected override async Task OnInitializedAsync()
    {
        DbMovieTable movietable = new DbMovieTable(DbFactory);
        Movie = await movietable.ReadSingleRecord(MovieId);

        if (Movie != null)
        {
            MovieForm.Title = Movie.Title;
            MovieForm.Format = Movie.Format;
            MovieForm.DurationHours = Movie.Duration.Value.Hours;
            MovieForm.DurationMinutes = Movie.Duration.Value.Minutes;
            MovieForm.Release = Movie.Release.HasValue ? Movie.Release.Value : DateOnly.MinValue;
            MovieForm.SelectedRating = Movie.Rating;
            MovieForm.Poster = Movie.Poster;
            MovieForm.Story = Movie.Story;
        }
        else
        {
            throw new FindArgumentNullException();
        }
    }

    private void HandleCanceledSubmit()
    {
        NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
    }

    private async Task HandleValidSubmit()
    {
        IsValidSubmit = true;

        DbMovieTable movietable = new DbMovieTable(DbFactory);
        bool isSuccess = await movietable.UpdateRecord(MovieForm, MovieId);
        if (isSuccess)
        {
            NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
        }
        else
        {
            throw new UpdateArgumentNullException();
        }
    }

    private void HandleInvalidSubmit()
    {
        IsValidSubmit = false;
    }

    private void IncrementHour()
    {
        if (MovieForm.DurationHours < 12)
        {
            MovieForm.DurationHours++;
        }
    }

    private void DecrementHour()
    {
        if (MovieForm.DurationHours > 0)
        {
            MovieForm.DurationHours--;
        }
    }

    private void IncrementMinute()
    {
        if (MovieForm.DurationMinutes < 59)
        {
            MovieForm.DurationMinutes++;
        }
    }

    private void DecrementMinute()
    {
        if (MovieForm.DurationMinutes > 0)
        {
            MovieForm.DurationMinutes--;
        }
    }
}